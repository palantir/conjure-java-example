version: 2
jobs:
  build:
    docker:
      # - image: cimg/openjdk:11.0.10-node
      - image: cimg/openjdk:17.0.0-node
    environment:
      GRADLE_OPTS: -Dorg.gradle.console=plain -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false
    steps:
      - checkout
      - restore_cache:
          key: gradle-wrapper-v2-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: gradle-cache-v2-{{ checksum "versions.props" }}-{{ checksum "build.gradle" }}

      - run: ./gradlew --parallel resolveConfigurations

      - save_cache:
          key: gradle-wrapper-v2-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - ~/.gradle/wrapper
      - save_cache:
          key: gradle-cache-v2-{{ checksum "versions.props" }}-{{ checksum "build.gradle" }}
          paths:
            - ~/.gradle/caches

      - run: ./gradlew --parallel build -x test

      - run:
          name: run server in background so tests have something to hit
          command: |
            ./gradlew run
          background: true

      - run: ./gradlew test

      - run:
          command: |
            mkdir -p ~/junit
            find . -type f -regex ".*/build/.*TEST.*xml" -exec cp --parents {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit

      - deploy:
          command: |
            if [[ "${CIRCLE_TAG}" =~ [0-9]+(\.[0-9]+)+(-[a-zA-Z]+[0-9]*)* ]]; then
              ./gradlew --stacktrace --continue publish
            fi

      - store_artifacts:
          path: ~/poms
  publish-docker:
    docker:
      - image: cimg/openjdk:17.0.0-node
      # - image: cimg/openjdk:11.0.10-node
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          key: gradle-wrapper-v2-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: gradle-cache-v2-{{ checksum "versions.props" }}-{{ checksum "build.gradle" }}
      - run: ./gradlew distTar
      - run: ./scripts/build_docker.sh
      - run:
          command: |
            docker run palantirtechnologies/recipe-example-server:$(git describe --tags --always --first-parent) --help
          background: true
      - deploy:
          command: |
            if [[ "${CIRCLE_BRANCH}" == "develop" || "${CIRCLE_TAG}" =~ [0-9]+(\.[0-9]+)+(-[a-zA-Z]+[0-9]*)* ]]; then
              docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
              docker push palantirtechnologies/recipe-example-server:$(git describe --tags --always --first-parent)
              docker push palantirtechnologies/recipe-example-server:latest
            fi

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - publish-docker:
          requires:
            - build
          filters: { tags: { only: /.*/ } }
